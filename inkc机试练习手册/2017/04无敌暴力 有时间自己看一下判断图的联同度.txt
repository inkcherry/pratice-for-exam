#include "pch.h"
#include<iostream>
#include<algorithm>
#include<fstream>
using namespace std;
int main()
{
	int n;  //顶点数目
	int a[6][6] = { 0 };  //矩阵
	int dp[6][6] = { 0 };
	int e[10][2];
	int ednum=0;
	ifstream infile("C:\\Users\\inkcherry\\Desktop\\inkc机试练习手册\\testfile\\201704.txt");
	infile >> n;
	int i1, i2;
	int i = 0;
	while (!infile.eof())
	{

		infile >> i1 >> i2;
		//cout << i1 <<" "<< i2<<" ";
		a[i1][i2] = 1;
		a[i2][i1] = 1;
		
	/*	e[i][0] = i1;
		e[i++][1] = i2;*/
	}

	int gflag = 0;
	for (int i = 1; i <= n; i++)  //每个顶点依次删去；
	{
		
		
		for(int  h=1;h<=n;h++)   //矩阵恢复
			for (int q = 1; q <=n; q++)
			{
				dp[h][q]=a[h][q];
			}

		int flag = 1;
		for (int aa = 1; aa <=n; aa++)  //删除一个顶点
		{
			dp[i][aa] = 0;
			dp[aa][i] = 0;
		}

		int count = 0;
		while (flag)//  flag表示本次循环没有变
		{
			flag = 0;
			int j, k, m;

			for ( j = 1;j <= n; j++)
			{
				for ( k = 1; k <= n; k++)   //d[j][k];
				{
					for ( m = 1; m <= n; m++)
					{
						if ((dp[k][m] == 1)&&( dp[j][m] == 0))  //更新联同度数组
						{
							dp[j][m] = 1;
							flag = 1;
						}
					}
			         
				}

			}
		
		
		}

		int flag2 = 0;	
		for (int ii = 1; ii <= n&&ii!=i; ii++)
		{
			for (int jj = 1; jj <= n&&jj!=i; jj++)  //不能包含删除的那个顶点
			{
				if (dp[ii][jj] == 0)
				{
					cout << i;
					gflag = 1;
					break;
				}


			}
			if (gflag == 1)
				break;

		}if (gflag == 1)
			break;

	}
	if(!gflag)
	cout << "不存在这样的顶点" << endl;
	return 0;
	
}