#include "pch.h"
#include<iostream>
#include<algorithm>
#include<fstream>
#include<math.h>
#include <string>
#include<vector>
#include <stack>
#include<list>
#include<queue>
#include<memory>
#include<memory.h>
using namespace std;
//	ifstream infile("C:\\Users\\inkcherry\\Desktop\\pratice\\input\\001.txt");
//涉及到清楚标记的问题
int n;
int a[100];
int d[100];  //统计是不是素数
int print[100];
int cnt;
int visit[100];

int is_prime(int p)
{

	if (d[p] == -1)
	{
		for (int i = 2; i <= sqrt(p); i++)
		{
			if (p%i == 0)
			{
				d[p] = 0;
				return 0;
			}
			
		}
		d[p] = 1;
		return 1;
		
	}
	else return d[p];
}

void dfs(int p, int deep)
{
	if (( is_prime(p + print[deep - 1])) )
	{
		visit[p] = 1;
		print[deep] = p;
		if (deep == n)
		{
			cout << "case" << ++cnt << " :";
			for (int i = 1; i <= n; i++)
			{
				
				cout << print[i] << " ";

			}
			cout << endl;
			
		}

		else for (int i = 2; i <= n; i++)
		{
			if (!visit[i])

			{	dfs(i, deep + 1);
			for (int i = deep + 1; i <= n; i++)         //这里弄复杂了 实际上只要清除自己的标记就行
			{
				visit[print[i]] = 0;
				print[i] = 0;
			}
		    }
		}
	}
	return;
}

int main()
{
	ifstream infile("C:\\Users\\inkcherry\\Desktop\\pratice\\input\\002.txt");
	
	int m;
	infile >> m;
	memset(d, -1, sizeof(d));
	for (int i = 0; i <m; i++)
	{
		infile >> n;
		memset(visit, 0, sizeof(visit));
		memset(a, 0, sizeof(a));
	
		memset(visit, 0, sizeof(visit));
		cnt = 0;
		print[1] = 1;
		visit[1] = 1;
		
		dfs(1,1);


	 }
	
	return 0;
}
